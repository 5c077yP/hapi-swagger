{
    "paths": {
        "/path/two": {
            "get": {
                "operationId": "pathtwo",
                "parameters": [],
                "tags": [
                    "path"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/response_pathtwo_get_200"
                        },
                        "description": "Successful"
                    }
                }
            },
            "post": {
                "operationId": "pathtwo",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/parameters_List"
                        }
                    }
                ],
                "tags": [
                    "path"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/response_pathtwo_post_200"
                        },
                        "description": "Successful"
                    }
                }
            }
        },
        "/path/one": {
            "put": {
                "operationId": "pathtwo",
                "parameters": [],
                "tags": [
                    "path"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/parameters_Sum"
                        },
                        "description": "Successful"
                    }
                }
            },
            "post": {
                "operationId": "pathone",
                "parameters": [],
                "tags": [
                    "path"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/parameters_Sum"
                        },
                        "description": "Successful"
                    }
                }
            }
        },
        "/path/three": {
            "post": {
                "operationId": "paththree",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/parameters_List"
                        }
                    }
                ],
                "tags": [
                    "path"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/parameters_Sum"
                        },
                        "description": "Successful"
                    }
                }
            }
        },
        "/foo/v1/bar": {
            "post": {
                "summary": "...",
                "operationId": "foov1bar",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/inner1"
                        }
                    }
                ],
                "tags": [
                    "foo"
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "string"
                        },
                        "description": "Successful"
                    }
                }
            }
        }
    },
    "swagger": "2.0",
    "info": {
        "title": "Test API Documentation",
        "description": "This is a sample example of API documentation.",
        "version": "3.0.1",
        "termsOfService": "https://github.com/glennjones/hapi-swagger/",
        "contact": {
            "email": "glennjonesnet@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://raw.githubusercontent.com/glennjones/hapi-swagger/master/license.txt"
        }
    },
    "tags": [
        {
            "name": "store",
            "description": "Storing a sum",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://example.org"
            }
        },
        {
            "name": "sum",
            "description": "API of sums",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://example.org"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "host": "localhost:3000",
    "basePath": "/",
    "produces": [
        "application/json"
    ],
    "definitions": {
        "response_pathtwo_get_200": {
            "title": "labelone",
            "type": "object",
            "properties": {
                "value2222": {
                    "type": "boolean"
                }
            }
        },
        "response_pathtwo_post_200": {
            "title": "labeltwo",
            "properties": {
                "value2222": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "parameters_Sum": {
            "title": "SumX",
            "properties": {
                "id": {
                    "example": "x78P9c",
                    "type": "string"
                },
                "a": {
                    "example": 5,
                    "type": "number"
                },
                "b": {
                    "example": 5,
                    "type": "number"
                },
                "operator": {
                    "description": "either +, -, /, or *",
                    "example": "+",
                    "type": "string"
                },
                "equals": {
                    "example": 10,
                    "type": "number"
                },
                "created": {
                    "description": "ISO date string",
                    "example": "2015-12-01",
                    "type": "string"
                },
                "modified": {
                    "example": "2015-12-01",
                    "description": "ISO date string",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "a",
                "b",
                "operator",
                "equals",
                "created"
            ],
            "type": "object"
        },
        "parameters_List": {
            "title": "Listx",
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/parameters_Sum"
                    },
                    "title": "Sum",
                    "type": "array"
                },
                "count": {
                    "example": "1",
                    "type": "number"
                },
                "pageSize": {
                    "example": "10",
                    "type": "number"
                },
                "page": {
                    "example": "1",
                    "type": "number"
                },
                "pageCount": {
                    "example": "1",
                    "type": "number"
                }
            },
            "required": [
                "count",
                "pageSize",
                "page",
                "pageCount"
            ],
            "type": "object"
        },
        "outer1": {
            "properties": {
                "inner1": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "outer2": {
            "properties": {
                "inner2": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "inner1": {
            "properties": {
                "outer1": {
                    "$ref": "#/definitions/outer1",
                    "type": "object"
                },
                "outer2": {
                    "$ref": "#/definitions/outer2",
                    "type": "object"
                }
            },
            "type": "object"
        }
    }
}